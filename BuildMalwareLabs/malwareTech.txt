"URL":"https://www.malwaretech.com/2017/11/creating-a-simple-free-malware-analysis-environment.html" 

COMPUTER REQUIREMENTS
=====================

	- CPU with AMD-V or Intel VT-x support

	- 4 GB RAM+


PICKING A HYPERVISOR
====================

A hypervisor is software used to create virtual machines isolated from the host machine. Not all hypervisors are equal, some are better suited for certain tasks

VMWorkstation Pro 
	- High performance
	- MalwareTech's choice for best Windows hypervisor. 
	- Lots of extra features.

VmWare Workstation Player 
	- Lightweight version of Pro
	- great for simple VMs but does not support snapshots.

KVM 
	- Runs on Linux
	- Used de-duplication to optimize VM performance for instance allowing one to run more VMs than the system has RAM available for. 
	- KVM is great to avoid malware detection because typically malware checks for the presence of VirtualBox or VMWare specific artifacts

ESXi
	- The hypervisor is also the operating system
	- Overhead is reduced because only the hypevisor is running on the host machine.

VirtualBox 
	- Allows one to spoof the hardware the VM runs which can prevent vm detection by malware when probing virtual/physical hardware and/or firmware versions
	- also free and contains nearly same features as paid hypervisors.


PICKING YOUR GUEST OS
=====================

HARDWARE

 - Be aware of the VM ISO hardware requirements as well as the architecture of the host machine and the architecture of the VM. For instance, a x86_64 CPU can run 32-bit and 64-bit VMs, but a x86 CPU can only run 32-bit VMs. Further, low RAM on the host machine may affect the number and type of OS running concurrently.

WHAT IS RELEVENT TO YOU?

 - MalwareTech describes having every OS from Windows XP to 10 including both 32-bit and 64-bit installations and as of 2017 cites Windwos 7 Ultimate Edition (32-bit) their favorite for working with common malware.


SETTING UP THE VIRTUAL MACHINE
==============================

RAM - Minimum for OS is sufficient

CPU - Avoid setting the number of CPU cores to an equal or greater number than what your computer has. 

NETWORK - Select the "NAT" option. This will allow the VM to connect to the internet but it will not be able to see devices on the real network nor talk to other VMs.


PREVENTING MALWARE VM DETECTION
===============================

VirtualBox hardened VM detection mitigation loader : https://github.com/hfiref0x/VBoxHardenedLoader

	- Patches VirtulBox DLLs
	- Stops monitoring via Tsugumi monitor driver (?)

Generally harden VirtualBox to prevent malware detecting it is inside a VM.


ENVIRONMENT SETUP
=================
	- Once the initial environment is configured, take a snapshot of the system as a restore point


INSTALL REQUIRED SOFTWARE
=========================
*Before installing, take a snapshot

	DISASSEMBLERS/DEBUGGERS
		- OllyDbg
		- WinDbg (Part of Windows SDK)
		- x64Dbg
		- IDA (Freeware)
		- Radare2

	PETOOLS
		- PE Explorer
		- Explorer Suite
		- PEStudio
	
	PROCESS TOOLS
		- Process Hacker
		- ProcMon
		- Process Explorer
		- Process Dump
		- User Mode Process Dumper
	
	NETWORK TOOLS
		- Wireshark
		- Fiddler
		- mitmproxy
	
	OTHER
		- HxD (Hex Editor)
		- PaFish (Testing for VM dection)
		- oledump (Extract Macros from Office Documents)
		- olevba (VBA Macro Extractor)
		- Strings (Extracts ASCII and Unicode Text from Files)

once finished installing... take a snapshot. =^.^=

WARNINGS
========
	Never plug USB devices into your virtual machine.
	
	Assume every file has been infected.
	
	Exercise caution with any shared folders and the local VM. The contents are subject to be stolen, infected, or destroyed by malware.

	Do not run unfamiliar samples on an internet connected VM; there is a risk that the sample may commit a crime under your IP. I.E. DOS, host illegal content, harm other computers, continue malware compaings, etc.

	Local VPN use may be disabled by malware and may fail; VPNs should be running on the host machine.

	Avoid storing executable malware files in places where they may be accidentally executed. Rename the file extension to .malware or similar to prevent them from being run accidentally.

	Obvious, but assume that anything inside of the VM could be exposed to the attacker.

	Use snapshots to save progress during analysis.

	To help prevent AV from detecting and deleting malware one can create a whitelisted directory in AV settings.
